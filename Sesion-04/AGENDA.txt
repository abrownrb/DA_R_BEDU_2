ESTADÍSTICA Y PROGRAMACIÓN CON R
Octubre 2020

-----
¿Qué ya sabemos?
-----

Comandos y funciones básicas de R. Paquetes y librerías.
Manejo de estructuras de datos: vectores, listas, matrices, arreglos y dataframes usando la base de R.
Las bases teóricas del código: poo, operadores, funciones, ciclos for y while, condicionales.
Leer archivos de datos, conocer descripción básica de qué lo compone y estadísticas sencillas.

Con esto ya sabemos todo lo que se necesita para usar RStudio como lenguaje de programación, a partir de ahora hablaremos más de cómo se utiliza para el análisis datos.

-----
Dplyr
-----
Intro a dplyr. Los dataframes son objetos, éste es un paquete que los maneja con más facilidad. --- Pa'después.
dplyr, crear vars, ordenar, seleccionar columnas, registros, uniones y resumen.

Pipes-secuencia, verbos: mutate, summarize, group_by, select, filter, arrange, rename.

Ejemplo simple
Ejemplos varios

INTRO DPLYR-RETO 7
Haz un llamado a la libreria dplyr
Lee el archivo Metro_Interstate_Traffic_Volume.csv y guardalo en df.traffic
Ve la estructura del dataframe y los tipos de dato de cada columna
Calcula el promedio de la columna traffic_volume y guardala en mean.traffic
Selecciona solo las columnas weather_main y traffic_volume
Cambia de nombre las columnas: weather_main a clima y traffic_volume a trafico
Filtra a las observaciones donde la columna trafico sea mayor o igual a mean.traffic
Guarda el dataframe filtrado como df.traffic.filter
¿Cuántos renglones y columnas tiene df.traffic.filter?
Con df.traffic.filter, agrupa por clima y saca el min de trafico y max de trafico, guardalo en df.traffic.grouped
Agrega una columna a df.traffic.grouped que sea la diferencia entre max y min del grupo

-----
SQL, MongoDB, URLs
-----

Prework: qué es la nube. RStudioCloud-suministo de activos y recursos a través de conexión a internet. Usuario-servidor. Rápido, barato, no-complejas, escalable.
1. SaaS software as a service - streaming
2. Paas platform as a service - empresas: subir/bajar
3. IaaS infrastructure as a service - no gastar en hardware, red propia

Leer otros tipos de datos.

Json (javascript object notation) pares key-value, estructura tipo listas R. Ligero, compatible con varios lenguajes (libre).

XML (extensible markup language) independente del lenguaje, value from-to, centrado en datos. HTML centrado en vistas.

Paréntesis GitHub 
https://www.hostinger.mx/tutoriales/que-es-github/

Conectar Git a Rstudio
Integrar Rstudio con BDs mediante.
Drivers (MySQL, MariaDB): El odbc package, proporciona soporte DBI (Database Interface) y una conexión ODBC (Open DataBase Connectivity)
Querys + dplyr / DBI

Reto: resumen de todo lo que vimos, hacerlo de tarea y el postwork.